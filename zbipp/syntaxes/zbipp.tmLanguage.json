{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ZBI++",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.zbipp",
					"match": "(?i)\\b(IF|THEN|ELSE|END|DO|WHILE|UNTIL|LOOP|FOR|NEXT|RETURN|GOTO|GOSUB|SUB|EXIT|END|SLEEP|TO|STEP)\\b"
				},
				{
					"name": "storage.type.array.zbipp",
					"match": "(?i)\\b(STRING|NUMERIC)\\b"
				},
				{
					"name": "keyword.operator.command.zbipp",
					"match": "(?i)\\b(LET|OPEN|NAME|CLOSE|PRINT|INPUT|INBYTE|OUTBYTE|DECLARE|AUTONUM|STORE|LOAD|DIR|DELETE|ISERROR|ISWARNING|SETERR|CLRERR|REDIM)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.zbipp",
					"match": "(?i)(=|\\:|&|\\+|\\-|\\*|/|\\^|<|>|<=|>=)|\\b(ON|NOT|AND|OR)\\b"
				}
			]
		
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.lang.zbpp",
					"match": "(?i)\\b(DATAREADY|SERVERSOCKET|CLIENTSOCKET|ACCEPT|READ|WRITE|SEARCHTO\\$|CSVSTORE|CSVLOAD|TXTSTORE|TXTLOAD|REGISTEREVENT|UNREGISTEREVENT|HANDLEEVENT|TRIGGEREVENT|AUXPORT_STEALPIN|AUXPORT_SETPIN|AUXPORT_GETPIN|AUXPORT_RELEASEPIN|LCASE\\$|CHR\\$|LTRIM\\$|REPEAT\\$|RTRIM\\$|SPLIT|SPLITCOUNT|UCASE\\$|EXTRACT\\$|ORD|POS|LEN|STR\\$|MAX|MIN|MOD|VAL|INTTOHEX\\$|HEXTOINT|INSERTROW|DELROW|ROWSIZE|COLUMNSIZE|FIND|SETVAR|GETVAR\\$)"
				},
				{
					"name": "entity.name.function.user.zbpp",
					"match": "\\^[\\w\\d]+"
				},
				{
					"name": "entity.name.tag.error.zbpp",
					"match": "\\?[\\w\\d]+"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.zbipp",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.zbipp",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.exclaim.zbpp",
					"match": "!"
				},
				{
					"name": "comment.line.slash.zbpp",
					"begin": "\/\/",
					"end": "$"
				},
				{
					"name": "comment.block.zbpp",
					"begin": "\\/\\*",
					"end": "\\*\\/"
				},
				{
					"name": "comment.line.rem.zbpp",
					"match": "(?i)REM\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.buffer.zbpp",
					"match": "(?i)<(\\s*[\\da-f]{2}\\s*)+>"
				},
				{
					"name": "constant.numeric.integer.zbpp",
					"match": "\\b\\d+\\b"
				},
				{
					"name": "constant.language.zbpp",
					"match": "(?i)\\b(ALL|ERROR|MAXNUM|DATE\\$|TIME\\$|DATE|TIME)\\b"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.parameter.scoped.zbpp",
					"match": "[\\$~][\\w\\d]+"
				},
				{
					"name": "variable.parameter.static.zbpp",
					"match": "[@%][\\w\\d]+"
				},
				{
					"name": "variable.parameter.native.zbpp",
					"match": "\\w[\\w\\d]*\\$?"
				}
			]
		}
	},
	"scopeName": "source.zbp"
}
